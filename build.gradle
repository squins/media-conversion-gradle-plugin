buildscript {
    ext.kotlin_version = '1.3.50'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

    }
}

group 'com.squins.media.conversion'
version '0.4'

apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'signing'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compileOnly gradleApi()

    testCompile("org.junit.jupiter:junit-jupiter-api:5.5.1")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.5.1")
}

wrapper {
    gradleVersion '7.0'
    distributionType Wrapper.DistributionType.ALL
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

java {
    toolchain {
        withJavadocJar()
        withSourcesJar()
    }
}

javadoc {
    failOnError = false
}

test {
    useJUnitPlatform()
}

// Put your GPG and Sonatype credentials in "gradle.properties".
//
// Documentation for GPG:
//     https://docs.gradle.org/current/userguide/signing_plugin.html#sec:signatory_credentials
if (project.hasProperty('signing.keyId') && project.hasProperty('signing.password') && project.hasProperty('signing.secretKeyRingFile') && project.hasProperty('sonatype.username') && project.hasProperty('sonatype.password')) {
    publishing {
        publications {
            Release(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version

                from components.java

                pom {
                    name = "Media Conversion Gradle Plug-in"
                    description = "Converts media files to other formats."
                    url = "https://github.com/squins/media-conversion-gradle-plugin"
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    scm {
                        connection = 'scm:git:git@github.com:squins/media-conversion-gradle-plugin.git'
                        developerConnection = 'scm:git:scm:git:git@github.com:squins/media-conversion-gradle-plugin.git'
                        url = 'scm:git:git@github.com:squins/media-conversion-gradle-plugin.git'
                    }
                }
            }
        }

        repositories {
            maven {
            name = "ossSonatype"
                def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots'
                def releasesRepoUrl =  'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username = project.property("sonatype.username")
                    password = project.property("sonatype.password")
                }
            }
        }
    }

    signing {
        sign publishing.publications.Release
    }
}
